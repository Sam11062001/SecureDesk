//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SecureDesk.AccountService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAccountData", Namespace="http://schemas.datacontract.org/2004/07/SecureDesk_WCF_Service.Models")]
    [System.SerializableAttribute()]
    public partial class UserAccountData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountName {
            get {
                return this.UserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountNameField, value) != true)) {
                    this.UserAccountNameField = value;
                    this.RaisePropertyChanged("UserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userEmail {
            get {
                return this.userEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.userEmailField, value) != true)) {
                    this.userEmailField = value;
                    this.RaisePropertyChanged("userEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/SecureDesk_WCF_Service.Models")]
    [System.SerializableAttribute()]
    public partial class CustomException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageToUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorTitleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessageToUser {
            get {
                return this.errorMessageToUserField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageToUserField, value) != true)) {
                    this.errorMessageToUserField = value;
                    this.RaisePropertyChanged("errorMessageToUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorTitleName {
            get {
                return this.errorTitleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.errorTitleNameField, value) != true)) {
                    this.errorTitleNameField = value;
                    this.RaisePropertyChanged("errorTitleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/addAccount", ReplyAction="http://tempuri.org/IAccountService/addAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SecureDesk.AccountService.CustomException), Action="http://tempuri.org/IAccountService/addAccountCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/SecureDesk_WCF_Service.Models")]
        bool addAccount(SecureDesk.AccountService.UserAccountData userAccountData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/addAccount", ReplyAction="http://tempuri.org/IAccountService/addAccountResponse")]
        System.Threading.Tasks.Task<bool> addAccountAsync(SecureDesk.AccountService.UserAccountData userAccountData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/updateAccount", ReplyAction="http://tempuri.org/IAccountService/updateAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SecureDesk.AccountService.CustomException), Action="http://tempuri.org/IAccountService/updateAccountCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/SecureDesk_WCF_Service.Models")]
        bool updateAccount(SecureDesk.AccountService.UserAccountData userAccountData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/updateAccount", ReplyAction="http://tempuri.org/IAccountService/updateAccountResponse")]
        System.Threading.Tasks.Task<bool> updateAccountAsync(SecureDesk.AccountService.UserAccountData userAccountData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/deleteAccount", ReplyAction="http://tempuri.org/IAccountService/deleteAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SecureDesk.AccountService.CustomException), Action="http://tempuri.org/IAccountService/deleteAccountCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/SecureDesk_WCF_Service.Models")]
        bool deleteAccount(SecureDesk.AccountService.UserAccountData userAccountData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/deleteAccount", ReplyAction="http://tempuri.org/IAccountService/deleteAccountResponse")]
        System.Threading.Tasks.Task<bool> deleteAccountAsync(SecureDesk.AccountService.UserAccountData userAccountData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getAllAccounts", ReplyAction="http://tempuri.org/IAccountService/getAllAccountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SecureDesk.AccountService.CustomException), Action="http://tempuri.org/IAccountService/getAllAccountsCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/SecureDesk_WCF_Service.Models")]
        SecureDesk.AccountService.UserAccountData[] getAllAccounts(string email_Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getAllAccounts", ReplyAction="http://tempuri.org/IAccountService/getAllAccountsResponse")]
        System.Threading.Tasks.Task<SecureDesk.AccountService.UserAccountData[]> getAllAccountsAsync(string email_Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/requestDecryption", ReplyAction="http://tempuri.org/IAccountService/requestDecryptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SecureDesk.AccountService.CustomException), Action="http://tempuri.org/IAccountService/requestDecryptionCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/SecureDesk_WCF_Service.Models")]
        SecureDesk.AccountService.UserAccountData requestDecryption(string email_Address, string accountName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/requestDecryption", ReplyAction="http://tempuri.org/IAccountService/requestDecryptionResponse")]
        System.Threading.Tasks.Task<SecureDesk.AccountService.UserAccountData> requestDecryptionAsync(string email_Address, string accountName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : SecureDesk.AccountService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<SecureDesk.AccountService.IAccountService>, SecureDesk.AccountService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addAccount(SecureDesk.AccountService.UserAccountData userAccountData) {
            return base.Channel.addAccount(userAccountData);
        }
        
        public System.Threading.Tasks.Task<bool> addAccountAsync(SecureDesk.AccountService.UserAccountData userAccountData) {
            return base.Channel.addAccountAsync(userAccountData);
        }
        
        public bool updateAccount(SecureDesk.AccountService.UserAccountData userAccountData) {
            return base.Channel.updateAccount(userAccountData);
        }
        
        public System.Threading.Tasks.Task<bool> updateAccountAsync(SecureDesk.AccountService.UserAccountData userAccountData) {
            return base.Channel.updateAccountAsync(userAccountData);
        }
        
        public bool deleteAccount(SecureDesk.AccountService.UserAccountData userAccountData) {
            return base.Channel.deleteAccount(userAccountData);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAccountAsync(SecureDesk.AccountService.UserAccountData userAccountData) {
            return base.Channel.deleteAccountAsync(userAccountData);
        }
        
        public SecureDesk.AccountService.UserAccountData[] getAllAccounts(string email_Address) {
            return base.Channel.getAllAccounts(email_Address);
        }
        
        public System.Threading.Tasks.Task<SecureDesk.AccountService.UserAccountData[]> getAllAccountsAsync(string email_Address) {
            return base.Channel.getAllAccountsAsync(email_Address);
        }
        
        public SecureDesk.AccountService.UserAccountData requestDecryption(string email_Address, string accountName) {
            return base.Channel.requestDecryption(email_Address, accountName);
        }
        
        public System.Threading.Tasks.Task<SecureDesk.AccountService.UserAccountData> requestDecryptionAsync(string email_Address, string accountName) {
            return base.Channel.requestDecryptionAsync(email_Address, accountName);
        }
    }
}
