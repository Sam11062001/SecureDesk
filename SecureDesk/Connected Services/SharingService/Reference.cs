//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SecureDesk.SharingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentData", Namespace="http://schemas.datacontract.org/2004/07/SecureDesk_WCF_Service.Models")]
    [System.SerializableAttribute()]
    public partial class DocumentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sharedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileLink {
            get {
                return this.fileLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.fileLinkField, value) != true)) {
                    this.fileLinkField = value;
                    this.RaisePropertyChanged("fileLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sharedBy {
            get {
                return this.sharedByField;
            }
            set {
                if ((object.ReferenceEquals(this.sharedByField, value) != true)) {
                    this.sharedByField = value;
                    this.RaisePropertyChanged("sharedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedDocumentData", Namespace="http://schemas.datacontract.org/2004/07/SecureDesk_WCF_Service.Models")]
    [System.SerializableAttribute()]
    public partial class SharedDocumentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sharedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileLink {
            get {
                return this.fileLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.fileLinkField, value) != true)) {
                    this.fileLinkField = value;
                    this.RaisePropertyChanged("fileLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sharedBy {
            get {
                return this.sharedByField;
            }
            set {
                if ((object.ReferenceEquals(this.sharedByField, value) != true)) {
                    this.sharedByField = value;
                    this.RaisePropertyChanged("sharedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SharingService.ISharingService")]
    public interface ISharingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISharingService/connectToFirebase", ReplyAction="http://tempuri.org/ISharingService/connectToFirebaseResponse")]
        bool connectToFirebase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISharingService/connectToFirebase", ReplyAction="http://tempuri.org/ISharingService/connectToFirebaseResponse")]
        System.Threading.Tasks.Task<bool> connectToFirebaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISharingService/shareDocument", ReplyAction="http://tempuri.org/ISharingService/shareDocumentResponse")]
        void shareDocument(SecureDesk.SharingService.DocumentData documentData, string sharedBy, string sharedTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISharingService/shareDocument", ReplyAction="http://tempuri.org/ISharingService/shareDocumentResponse")]
        System.Threading.Tasks.Task shareDocumentAsync(SecureDesk.SharingService.DocumentData documentData, string sharedBy, string sharedTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISharingService/getSharedDocument", ReplyAction="http://tempuri.org/ISharingService/getSharedDocumentResponse")]
        SecureDesk.SharingService.SharedDocumentData[] getSharedDocument(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISharingService/getSharedDocument", ReplyAction="http://tempuri.org/ISharingService/getSharedDocumentResponse")]
        System.Threading.Tasks.Task<SecureDesk.SharingService.SharedDocumentData[]> getSharedDocumentAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISharingService/deleteSharedDocument", ReplyAction="http://tempuri.org/ISharingService/deleteSharedDocumentResponse")]
        void deleteSharedDocument(SecureDesk.SharingService.SharedDocumentData sharedDocumentData, string emailSharedTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISharingService/deleteSharedDocument", ReplyAction="http://tempuri.org/ISharingService/deleteSharedDocumentResponse")]
        System.Threading.Tasks.Task deleteSharedDocumentAsync(SecureDesk.SharingService.SharedDocumentData sharedDocumentData, string emailSharedTo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISharingServiceChannel : SecureDesk.SharingService.ISharingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SharingServiceClient : System.ServiceModel.ClientBase<SecureDesk.SharingService.ISharingService>, SecureDesk.SharingService.ISharingService {
        
        public SharingServiceClient() {
        }
        
        public SharingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SharingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SharingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SharingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool connectToFirebase() {
            return base.Channel.connectToFirebase();
        }
        
        public System.Threading.Tasks.Task<bool> connectToFirebaseAsync() {
            return base.Channel.connectToFirebaseAsync();
        }
        
        public void shareDocument(SecureDesk.SharingService.DocumentData documentData, string sharedBy, string sharedTo) {
            base.Channel.shareDocument(documentData, sharedBy, sharedTo);
        }
        
        public System.Threading.Tasks.Task shareDocumentAsync(SecureDesk.SharingService.DocumentData documentData, string sharedBy, string sharedTo) {
            return base.Channel.shareDocumentAsync(documentData, sharedBy, sharedTo);
        }
        
        public SecureDesk.SharingService.SharedDocumentData[] getSharedDocument(string email) {
            return base.Channel.getSharedDocument(email);
        }
        
        public System.Threading.Tasks.Task<SecureDesk.SharingService.SharedDocumentData[]> getSharedDocumentAsync(string email) {
            return base.Channel.getSharedDocumentAsync(email);
        }
        
        public void deleteSharedDocument(SecureDesk.SharingService.SharedDocumentData sharedDocumentData, string emailSharedTo) {
            base.Channel.deleteSharedDocument(sharedDocumentData, emailSharedTo);
        }
        
        public System.Threading.Tasks.Task deleteSharedDocumentAsync(SecureDesk.SharingService.SharedDocumentData sharedDocumentData, string emailSharedTo) {
            return base.Channel.deleteSharedDocumentAsync(sharedDocumentData, emailSharedTo);
        }
    }
}
